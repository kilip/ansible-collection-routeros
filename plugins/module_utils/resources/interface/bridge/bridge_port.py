# -*- coding: utf-8 -*-
#
# Copyright (C) 2020 Anthonius Munthi
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Ansible RouterOS Module Generator
#     and manual changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/kilip/routeros-generator
#
# ----------------------------------------------------------------------------
from __future__ import absolute_import, division, print_function

__metaclass__ = type

from ...base import ResourceBase


class BridgePortResource(ResourceBase):
    resource_name = "bridge_port"
    command = "/interface bridge port"
    gather_network_resources = ["bridge_port"]
    keys = ["bridge", "interface"]
    config_type = "config"
    argument_spec = {
        "state": {
            "type": "str",
            "choices": ["merged", "replaced", "overridden", "deleted"],
            "default": "merged",
        },
        "config": {
            "type": "list",
            "elements": "dict",
            "options": {
                "auto_isolate": {"type": "bool", "default": False},
                "bpdu_guard": {"type": "bool", "default": False},
                "bridge": {"type": "str", "required": True},
                "broadcast_flood": {"type": "bool", "default": True},
                "comment": {"type": "str"},
                "disabled": {"type": "bool", "default": False},
                "edge": {
                    "type": "str",
                    "choices": [
                        "auto",
                        "no",
                        "no-discover",
                        "yes",
                        "yes-discover",
                    ],
                    "default": "auto",
                },
                "external_fdb": {
                    "type": "str",
                    "choices": ["auto", "no", "yes"],
                    "default": "auto",
                },
                "fast_leave": {"type": "bool", "default": False},
                "frame_types": {
                    "type": "str",
                    "choices": [
                        "admit-all",
                        "admit-only-untagged-and-priority-tagged",
                        "admit-only-vlan-tagged",
                    ],
                    "default": "admit-all",
                },
                "horizon": {"type": "int", "default": 0},
                "ingress_filtering": {"type": "bool", "default": False},
                "interface": {"type": "str", "required": True},
                "internal_path_cost": {"type": "int", "default": 10},
                "learn": {
                    "type": "str",
                    "choices": ["auto", "no", "yes"],
                    "default": "auto",
                },
                "multicast_router": {
                    "type": "str",
                    "choices": ["disabled", "permanent", "temporary-query"],
                    "default": "temporary-query",
                },
                "path_cost": {"type": "int", "default": 10},
                "point_to_point": {
                    "type": "str",
                    "choices": ["auto", "no", "yes"],
                    "default": "auto",
                },
                "priority": {"type": "int", "default": 128},
                "pvid": {"type": "int", "default": 1},
                "restricted_role": {"type": "bool", "default": False},
                "restricted_tcn": {"type": "bool", "default": False},
                "tag_stacking": {"type": "bool", "default": False},
                "trusted": {"type": "bool", "default": False},
                "unknown_multicast_flood": {"type": "bool", "default": True},
                "unknown_unicast_flood": {"type": "bool", "default": True},
            },
        },
    }

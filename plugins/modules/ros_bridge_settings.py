#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2020 Anthonius Munthi
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Ansible RouterOS Module Generator
#     and manual changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/kilip/routeros-generator
#
# ----------------------------------------------------------------------------

from __future__ import absolute_import, division, print_function

__metaclass__ = type


DOCUMENTATION = """
module: ros_bridge_settings
version_added: 1.0.0
author: Anthonius Munthi (@kilip)
short_description: Bridge Setting Module
description:
  - This modules manages configuration in submenu C(/interface bridge settings).
ignores:
  - bridge-fast-path-active
  - bridge-fast-path-packets
  - bridge-fast-path-bytes
  - bridge-fast-forward-packets
  - bridge-fast-forward-bytes
supports:
  - export-verbose-mode
options:
  state:
    choices:
      - present
      - reset
    default: present
    description: Set state for this module
  config:
    type: dict
    suboptions:
      allow_fast_path:
        type: bool
        default: True
        description: Whether to enable a bridge L(FastPath, https://wiki.mikrotik.com/wiki/Manual:Fast_Path) globally.
      use_ip_firewall:
        type: bool
        default: False
        description: Force bridged traffic to also be processed by prerouting, forward and postrouting sections of IP routing (L(Packet Flow, https://wiki.mikrotik.com/wiki/Manual:Packet_Flow_v6 "Manual:Packet Flow v6")). This does not apply to routed traffic. This property is required in case you want to assign [ Simple Queues](https://wiki.mikrotik.com/wiki/Manual:Queue#Simple_Queues) or global L(Queue Tree, https://wiki.mikrotik.com/wiki/Manual:Queue#Queue_Tree) to traffic in a bridge. Property C(use-ip-firewall-for-vlan) is required in case bridge C(vlan-filtering) is used.
      use_ip_firewall_for_pppoe:
        type: bool
        default: False
        description: Send bridged un-encrypted PPPoE traffic to also be processed by L(IP/Firewall, https://wiki.mikrotik.com/wiki/Manual:IP/Firewall "Manual:IP/Firewall"). This property only has effect when C(use-ip-firewall) is set to C(yes). This property is required in case you want to assign [ Simple Queues](https://wiki.mikrotik.com/wiki/Manual:Queue#Simple_Queues) or global L(Queue Tree, https://wiki.mikrotik.com/wiki/Manual:Queue#Queue_Tree) to PPPoE traffic in a bridge.
      use_ip_firewall_for_vlan:
        type: bool
        default: False
        description: Send bridged VLAN traffic to also be processed by L(IP/Firewall, https://wiki.mikrotik.com/wiki/Manual:IP/Firewall "Manual:IP/Firewall"). This property only has effect when C(use-ip-firewall) is set to C(yes). This property is required in case you want to assign [ Simple Queues](https://wiki.mikrotik.com/wiki/Manual:Queue#Simple_Queues) or global L(Queue Tree, https://wiki.mikrotik.com/wiki/Manual:Queue#Queue_Tree) to VLAN traffic in a bridge.
"""

EXAMPLES = """
# Change Bridge Setting Configuration
#
# before state:
# [admin@MikroTik] > /interface bridge settings export
# /interface bridge settings
# set allow-fast-path=no use-ip-firewall=yes use-ip-firewall-for-pppoe=yes use-ip-firewall-for-vlan=yes
#
- name: Configure Bridge Settings
  kilip.routeros.ros_bridge_settings:
    config:
      allow_fast_path: yes
      use_ip_firewall: no
      use_ip_firewall_for_pppoe: no
      use_ip_firewall_for_vlan: no
    state: present
#
# after state:
# [admin@MikroTik] > /interface bridge settings export
# # RouterOS Output
# #
# /interface bridge settings
# set allow-fast-path=yes use-ip-firewall=no use-ip-firewall-for-pppoe=no use-ip-firewall-for-vlan=no
#
#
# Change Bridge Setting Configuration
#
# before state:
# [admin@MikroTik] > /interface bridge settings export
# /interface bridge settings
# set allow-fast-path=no use-ip-firewall=yes use-ip-firewall-for-pppoe=yes use-ip-firewall-for-vlan=yes
#
- name: Configure Bridge Settings
  kilip.routeros.ros_bridge_settings:
    state: reset
#
# after state:
# [admin@MikroTik] > /interface bridge settings export
# # RouterOS Output
# #
# /interface bridge settings
# set allow-fast-path=yes use-ip-firewall=no use-ip-firewall-for-pppoe=no use-ip-firewall-for-vlan=no
#
#
"""

from ansible.module_utils.basic import AnsibleModule
from ..module_utils.resources.interface.bridge.bridge_settings import (
    BridgeSettingsResource,
)
from ..module_utils.config.config import Config


def main():
    module = AnsibleModule(argument_spec=BridgeSettingsResource.argument_spec)
    result = Config(module, BridgeSettingsResource).execute_module()
    return module.exit_json(**result)


if __name__ == "__main__":
    main()
